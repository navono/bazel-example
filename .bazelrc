# Start with --all_incompatible_changes by default
build --all_incompatible_changes
# 
build --incompatible_enable_cc_toolchain_resolution=false

# Start with --all_incompatible_changes by default
build --all_incompatible_changes
# 

# In order to use find_cpp_toolchain, you must include the '@bazel_tools//tools/cpp:toolchain_type' in the toolchains argument to your rule.
build --incompatible_enable_cc_toolchain_resolution=false
# /external/io_bazel_rules_rust/rust/private/rustc.bzl", line 143, in _get_linker_and_args cc_common.configure_features(cc_toolchain = cc_toolchain, reque..., ...) Incompatible flag --incompatible_require_ctx_in_configure_features has been flipped, and the mandatory parameter 'ctx' of cc_common.configure_features is missing
build --incompatible_require_ctx_in_configure_features=false

build --incompatible_disable_deprecated_attr_params=false

build --incompatible_disallow_struct_provider_syntax=false

# Turn on the "Managed Directories" feature.
# This allows Bazel to share the same node_modules directory with other tools
# NB: this option was introduced in Bazel 0.26
# See https://docs.bazel.build/versions/master/command-line-reference.html#flag--experimental_allow_incremental_repository_updates
build --experimental_allow_incremental_repository_updates
query --experimental_allow_incremental_repository_updates
